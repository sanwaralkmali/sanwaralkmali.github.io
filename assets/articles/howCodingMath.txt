You are a senior front-end developer specializing in modern, responsive web design. Create a complete article page system for a blog using pure HTML, CSS, and vanilla JavaScript.

**Project Requirements:**

**Tech Stack:** Pure HTML5, CSS3, and vanilla JavaScript only (no frameworks)

**Design Style:** Bold and colorful modern design with vibrant colors, strong typography, and engaging visual elements

**Core Functionality:**
- Parse and render Markdown content into styled HTML
- Implement responsive design for mobile, tablet, and desktop
- Calculate and display reading time estimate
- Add social sharing buttons (Facebook, Twitter, LinkedIn, WhatsApp)
- Include "Back to Blog" navigation
- Create related articles section

**Article Typography & Elements:**
- Multiple heading levels (H1, H2, H3) with distinct styling
- Bold, italic, and combination formatting
- Blockquote styling with visual emphasis
- Code blocks with syntax highlighting
- Bulleted and numbered lists with custom styling
- Image support with captions and responsive sizing
- Callout boxes/highlighted sections for important content
- Pull quotes or featured text sections

**Layout Structure:**
```
- Header with back button and reading time
- Article title and metadata
- Main content area with rich typography
- Social sharing sidebar/footer
- Related articles section
- Responsive navigation
```

**Technical Specifications:**
- Mobile-first responsive design
- Smooth scrolling and animations
- Accessible markup (ARIA labels, semantic HTML)
- Fast loading with optimized CSS
- Cross-browser compatibility
- Clean, maintainable code structure

**Deliverables:**
1. Complete HTML structure for article page
2. Comprehensive CSS with responsive breakpoints
3. JavaScript for Markdown parsing and interactivity
4. Example article content integration
5. Social sharing functionality
6. Reading time calculation algorithm

**Content Integration:** The system should accept Markdown text input and automatically convert it to beautifully styled HTML with all the typography elements mentioned above.

Create a production-ready solution that looks professional and engaging while maintaining excellent performance across all devices.

**Key Improvements:**
- Specified exact tech stack requirements (vanilla JS/HTML/CSS)
- Detailed the bold, colorful design preference
- Structured comprehensive feature list
- Included technical specifications for responsiveness
- Added accessibility and performance considerations
- Specified Markdown parsing requirement
- Organized deliverables for clear implementation

**Techniques Applied:** Technical specification structuring, comprehensive feature mapping, responsive design emphasis, accessibility integration

The article is in /assets/Article1.md 
and there is 2 images that should be used in the article (they have names similar to the section in the article where they should be used in 

